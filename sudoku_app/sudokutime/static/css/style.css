:root {
    --grid-width: min(50vh, 90vw);
    --border-thickness: calc(var(--grid-width)/300);
    --grid-text: calc(var(--grid-width)/30 * 2);
    --primary: rgb(166, 166, 221);
    --secondary: rgb(93, 93, 126);
}

* {
    font-family: sans-serif;
    color: black;
}

body {
    padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
    background: var(--secondary);
}

.grid-message::before {
    position: absolute;
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
    content: attr(data-message);
    background: white;
    color: black;
    z-index: 10;
}

.grid {
    position: relative;
    width: var(--grid-width);
    height: var(--grid-width);
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    margin: 32px auto;
    font-size: var(--grid-text);
    background: black;
}

.box {
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
}

.cell {
    cursor: pointer;
    font-weight: bolder;
    padding: 0;
    background: #FFF;
    position: relative;
}

.cell::before {
    content: attr(data-pencil);
    position: absolute;
    top: 5%;
    left: 5%;
    font-size: .5em;
}

.cell.given {
    color: var(--secondary);
    cursor: default; 
}

.cell-active {
    box-shadow: inset 0 0 0 calc(3 * var(--border-thickness)) var(--primary);
}
.cell:focus-visible {
    outline: none;
}

.grid, .grid>*, .grid>*>* {
    border: var(--border-thickness) solid black;
}

.controls {
    font-size: var(--grid-text);
    display: flex;
    justify-content: space-evenly;
    width: calc(var(--grid-width));
    margin: 1em auto;
    background: white;
    padding: 1em 0;
    box-shadow: 0 0 20px 3px rgba(0,0,0,.5);
}

.number-pad, .input-type {
    display: grid;
    width: calc(var(--grid-width)/2 - 1.5em);
    height: calc(var(--grid-width)/2 - 1.5em);
    font-size: var(--grid-text);
}

.number-pad {
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    grid-gap: .5em;
}

.input-type {
    grid-template: repeat(2, 1fr) / repeat(2, 1fr);
    grid-gap: .5em;
}

.controls button {
    outline: none;
    border: solid black 1px;
    cursor: pointer;
    box-shadow: 0 0 8px 1px rgba(0, 0, 0, .4);
}

.number {
    background: var(--primary);
    font-weight: bolder;
    padding: 0;
}

.number:active {
    background: var(--secondary);
    box-shadow: inset 0 0 0 calc(2 * var(--border-thickness)) black;
}

.input-type button{
    background: black;
    color: white;
    padding: 0;
}

.undo, .redo {
    font-size: 200%;
    text-align: center;
    padding: 0;
}

.undo {
    transform: rotate(-90deg);
}

.redo {
    transform: rotate(90deg);
}

.answer {
    font-size: calc(1.5 * var(--grid-text));
}

.pencil-mark {
    position: relative;
}
.pencil-mark::before {
    position: absolute;
    top: 7%;
    left: 7%;
    content: '123';
    font-size: calc(var(--grid-text)*3/4)
}

.active, .undo:active, .redo:active {
    box-shadow: inset 0 0 0 calc(4 * var(--border-thickness)) var(--primary) !important;
    cursor: default !important;
    border-color: var(--primary) !important;
}

footer {
    box-sizing: border-box;
    position: absolute;
    bottom: 0;
    background: black;
    height: 10vh;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: calc(1.5 * var(--grid-text));
    padding: 0 5vw;
}

footer>* {
    background: black;
    color: white;
    outline: none;
    border: none;
    cursor: pointer;
    min-width: calc(var(--grid-width)/6);
}
.new {
    height: calc(1.5 * var(--grid-text));
    width: calc(1.5 * var(--grid-text));
    font-size: calc(1.5 * var(--grid-text));
}